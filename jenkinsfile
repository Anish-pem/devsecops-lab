pipeline {
    agent {
        label 'docker-agent-vm'
    }
    environment {
        DOCKERHUB_USER = 'anishcloudlab'
        IMAGE_NAME = 'jenkins-docker-lab'
    }
    stages {
        stage('Clean up image and container') {
            steps {
                script {
               //     sh 'git clone git@github.com:Vishwanathms/t7.14-py-jenkins.git'
                    sh 'docker rm  jenkins_app -f || true'
                    sh 'docker image rmi $DOCKERHUB_USER/$IMAGE_NAME:latest || true'
                }
            }  
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t $DOCKERHUB_USER/$IMAGE_NAME:latest python-app'
                }
            }
        }
        stage('Install Trivy') {
    steps {
        sh '''
            sudo apt-get update
            sudo apt-get install wget apt-transport-https gnupg lsb-release -y
            wget -O - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/trivy-archive-keyring.gpg] https://aquasecurity.github.io/trivy-repo/deb stable main" | sudo tee /etc/apt/sources.list.d/trivy.list
            sudo apt-get update
            sudo apt-get install trivy -y
        '''
    }
}
        stage('Scan Docker Image with Trivy') {
            steps {
                // Scan and save report
                sh '''
                  mkdir -p trivy-reports
                  trivy image --no-progress --exit-code 0 --format table -o trivy-reports/report.txt $DOCKERHUB_USER/$IMAGE_NAME
                  cat trivy-reports/report.txt
                '''
            }
        }
 
        stage('Archive Trivy Report') {
            steps {
                archiveArtifacts artifacts: 'trivy-reports/report.txt', fingerprint: true
            }
        }
    }
 
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
 